# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" ];
  boot.initrd.kernelModules = [ ];
  boot.resumeDevice = "/dev/disk/by-uuid/4497e628-ed1a-4bfe-bda3-db117931f659";
  boot.kernelParams = [ "resume_offset=149754929" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.kernel.sysctl = { "vm.swappiness" = 1; };
  boot.extraModulePackages = [ ];

  # TODO enhance with for loop over several subvols, also for nix store
  fileSystems."/" =
    { device = "/dev/mapper/crypted";
      fsType = "btrfs";
      options = [ "subvol=nixos" "compress=zstd" ];
    };
  fileSystems."/home" =
    { device = "/dev/mapper/crypted";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" ];
    };
  fileSystems."/swap" =
    { device = "/dev/mapper/crypted";
      fsType = "btrfs";
      options = [ "subvol=swap" "noatime" "compress=no"];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/4e3fc76a-a8a5-456e-a7b8-aae817910268";
      fsType = "ext4";
    };
  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/31E1-D072";
      fsType = "vfat";
    };

  swapDevices = [ { device = "/swap/swapfile"; } ];
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp166s0.useDHCP = lib.mkDefault true;

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
